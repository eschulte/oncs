# -*- mode:org -*-
#+Title: Oncs -- Oncs are Not Conses
#+Author: Eric Schulte
#+License: GPLV3
#+Options: ^:nil toc:nil num:nil
#+Style: <style type="text/css">pre{display:table-cell;background:#232323; color:#e6e1dc;}</style>
#+Style: <style type="text/css">#content{max-width:1000px;margin:auto;} body{ font-size:small; }</style>
#+Style: <style type="text/css">.outline-text-2{margin-left:2em;}.outline-text-3{margin-left:3em;}</style>

#+begin_center
A distributed lisp virtual machine
#+end_center

* Design
To enable function application we will need a mechanism for the object
of application to /traverse/ another structure and potentially replace
variables in that structure.  After traversal is completed the object
will need to be removed.

Objects are linked cons structures which perform the following verbs
- replace self with the value at a pointer filtering through protected list
- propagate an application message through an onc tree
- find free space for setting car/cdr to a pointer
- evaporation

Pointer -- header indicating type of contents, then car and cdr
| header | interpretation                       |
|--------+--------------------------------------|
|      0 | nil                                  |
|      1 | local pointer (car,cdr)              |
|      2 | integer car+cdr                      |
|      3 | symbol car (cdr for disambiguation?) |

Messages -- lambda-application
| var | lambda variable                             |
| car | pointer to argument                         |
| cdr | pointer to list of protected variable names |

Onc -- car, cdr and msg pointers

* Code
- pointers :: will be relative (x,y) coordinates
- oncs :: will be used to build computational and memory structures
     and may contain the following in their =car= and =cdr=.
  - nil
  - a pointer to another onc
  - a variable (symbol)
  - a lambda-symbol (a cons cell)
  - later inter primitives will be added (integers and integer ops)

* COMMENT Publishing
This code is used to publish this page to the =cs.unm.edu= webserver.
#+begin_src emacs-lisp :results silent
  (setq oncs-dir (file-name-directory (or load-file-name buffer-file-name)))
  (unless (boundp 'org-publish-project-alist)
    (setq org-publish-project-alist nil))
  ;; the main html page
  (add-to-list 'org-publish-project-alist
               `("oncs-html"
                  :base-directory ,oncs-dir
                  :include ("README")
                  :publishing-directory "/ssh:eschulte@kenworth.cs.unm.edu:~/public_html/code/oncs/"
                  :publishing-function org-publish-org-to-html
                  :style "<style type=\"text/css\">\n <!--/*--><![CDATA[/*><!--*/
    .title  { text-align: center; }
    p.verse { margin-left: 3% }
    p { text-align: justify }
    table { border-collapse: collapse; }
    td, th { vertical-align: top; }
    dt { font-weight: bold; }
    div.figure { padding: 0.5em; }
    div.figure p { text-align: center; }
    .linenr { font-size:smaller }
    #postamble { color: gray; padding-top: 2em; font-size: 0.75em; }
    /*]]>*/-->
  </style>"))
  ;; the contents of the base directory
  (add-to-list 'org-publish-project-alist
               `("oncs-data"
                 :base-directory ,oncs-dir
                 :include ("COPYING")
                 :base-extension "c\\|txt\\|lisp"
                 :publishing-directory "/ssh:eschulte@kenworth.cs.unm.edu:~/public_html/code/oncs/"
                 :publishing-function org-publish-attachment))
  ;; a single combined project to publish both html and supporting materials
  (add-to-list 'org-publish-project-alist
               '("oncs" :components
                 ("oncs-html"
                  "oncs-data")))
#+end_src
